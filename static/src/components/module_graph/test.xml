<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
    <t t-name="module_filters.ModuleFilters" owl="1">
        <div class="module-filters" t-on-click-outside="onClickOutside">
            <div class="d-flex mb-3">
                <!-- State Dropdown -->
                <div class="dropdown me-2" t-ref="dropdownState">
                    <button class="btn btn-outline-secondary dropdown-toggle"
                        t-on-click="() => this.toggleDropdown('state')">
                        <span>States</span>
                        <t t-if="state.selectedStates.length > 0">
                            <span class="badge bg-primary ms-2">
                                <t t-esc="state.selectedStates.length" />
                            </span>
                        </t>
                    </button>

                    <div t-if="state.stateDropdownOpen" class="dropdown-menu show p-2" style="min-width: 250px;">
                        <div class="dropdown-header d-flex justify-content-between align-items-center">
                            <span>Filter by States</span>
                            <button t-if="state.selectedStates.length > 0" class="btn btn-sm btn-link text-danger"
                                t-on-click="() => this.clearSelections('state')">
                                <i class="fa fa-times" /> Clear
                            </button>
                        </div>

                        <!-- Filter Mode Toggle -->
                        <div class="mb-2 d-flex justify-content-center">
                            <div class="btn-group btn-group-sm">
                                <button
                                    t-att-class="'btn ' + (state.stateFilterMode ? 'btn-primary' : 'btn-outline-primary')"
                                    t-on-click="() => { state.stateFilterMode = true; this.updateDomain(); }">
                                    is one of
                                </button>
                                <button
                                    t-att-class="'btn ' + (!state.stateFilterMode ? 'btn-primary' : 'btn-outline-primary')"
                                    t-on-click="() => { state.stateFilterMode = false; this.updateDomain(); }">
                                    is not one of
                                </button>
                            </div>
                        </div>

                        <div class="dropdown-divider"></div>
                        <div class="filter-options">
                            <t t-foreach="Array.from(state.availableStates.entries())" t-as="stateEntry"
                                t-key="stateEntry[0]">
                                <div class="form-check d-flex justify-content-between align-items-center">
                                    <div>
                                        <input type="checkbox" class="form-check-input"
                                            t-att-id="'state-' + stateEntry[0]"
                                            t-att-checked="state.selectedStates.includes(stateEntry[0])"
                                            t-on-change="() => this.toggleSelection('state', stateEntry[0])" />
                                        <label class="form-check-label" t-att-for="'state-' + stateEntry[0]">
                                            <t t-esc="stateEntry[0]" />
                                        </label>
                                    </div>
                                    <span class="badge bg-secondary">
                                        <t t-esc="stateEntry[1]" />
                                    </span>
                                </div>
                            </t>
                        </div>
                    </div>
                </div>

                <!-- Category Dropdown -->
                <div class="dropdown" t-ref="dropdownCategory">
                    <button class="btn btn-outline-secondary dropdown-toggle"
                        t-on-click="() => this.toggleDropdown('category')">
                        <span>Categories</span>
                        <t t-if="state.selectedCategories.length > 0">
                            <span class="badge bg-primary ms-2">
                                <t t-esc="state.selectedCategories.length" />
                            </span>
                        </t>
                    </button>

                    <div t-if="state.categoryDropdownOpen" class="dropdown-menu show p-2" style="min-width: 250px;">
                        <div class="dropdown-header d-flex justify-content-between align-items-center">
                            <span>Filter by Categories</span>
                            <button t-if="state.selectedCategories.length > 0" class="btn btn-sm btn-link text-danger"
                                t-on-click="() => this.clearSelections('category')">
                                <i class="fa fa-times" /> Clear
                            </button>
                        </div>

                        <!-- Filter Mode Toggle -->
                        <div class="mb-2 d-flex justify-content-center">
                            <div class="btn-group btn-group-sm">
                                <button
                                    t-att-class="'btn ' + (state.categoryFilterMode ? 'btn-primary' : 'btn-outline-primary')"
                                    t-on-click="() => { state.categoryFilterMode = true; this.updateDomain(); }">
                                    is one of
                                </button>
                                <button
                                    t-att-class="'btn ' + (!state.categoryFilterMode ? 'btn-primary' : 'btn-outline-primary')"
                                    t-on-click="() => { state.categoryFilterMode = false; this.updateDomain(); }">
                                    is not one of
                                </button>
                            </div>
                        </div>

                        <div class="dropdown-divider"></div>
                        <div class="filter-options" style="max-height: 300px; overflow-y: auto;">
                            <t t-foreach="Array.from(state.availableCategories.entries())" t-as="categoryEntry"
                                t-key="categoryEntry[0]">
                                <div class="form-check d-flex justify-content-between align-items-center">
                                    <div>
                                        <input type="checkbox" class="form-check-input"
                                            t-att-id="'category-' + categoryEntry[0]"
                                            t-att-checked="state.selectedCategories.includes(categoryEntry[0])"
                                            t-on-change="() => this.toggleSelection('category', categoryEntry[0])" />
                                        <label class="form-check-label" t-att-for="'category-' + categoryEntry[0]">
                                            <t t-esc="categoryEntry[1].name" />
                                        </label>
                                    </div>
                                    <span class="badge bg-secondary">
                                        <t t-esc="categoryEntry[1].count" />
                                    </span>
                                </div>
                            </t>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Application Filter Chips -->
            <div class="application-filter mb-3">
                <div class="d-flex gap-2">
                    <button
                        t-att-class="'btn btn-sm ' + (state.applicationFilter === null ? 'btn-primary' : 'btn-outline-primary')"
                        t-on-click="() => this.setApplicationFilter(null)">
                        All
                        <span class="badge bg-white text-primary ms-1">
                            <t t-esc="state.modules.length" />
                        </span>
                    </button>

                    <button
                        t-att-class="'btn btn-sm ' + (state.applicationFilter === true ? 'btn-success' : 'btn-outline-success')"
                        t-on-click="() => this.setApplicationFilter(true)">
                        Applications
                        <span class="badge bg-white text-success ms-1">
                            <t t-esc="this.getApplicationFilterCount(true)" />
                        </span>
                    </button>

                    <button
                        t-att-class="'btn btn-sm ' + (state.applicationFilter === false ? 'btn-info' : 'btn-outline-info')"
                        t-on-click="() => this.setApplicationFilter(false)">
                        Modules
                        <span class="badge bg-white text-info ms-1">
                            <t t-esc="this.getApplicationFilterCount(false)" />
                        </span>
                    </button>
                </div>
            </div>

            <!-- Active Filters Display -->
            <div t-if="state.selectedStates.length > 0 || state.selectedCategories.length > 0 || state.applicationFilter !== null"
                class="active-filters mb-3">
                <span class="text-muted me-2">Active filters:</span>

                <!-- State filters -->
                <t t-if="state.selectedStates.length > 0">
                    <span class="badge bg-light text-dark me-2">
                        State
                        <t t-esc="state.stateFilterMode ? 'is one of' : 'is not one of'" />:
                    </span>
                    <t t-foreach="state.selectedStates" t-as="stateName" t-key="stateName">
                        <span class="badge bg-primary me-1">
                            <t t-esc="stateName" />
                            <i class="fa fa-times ms-1" t-on-click="() => this.toggleSelection('state', stateName)" />
                        </span>
                    </t>
                </t>

                <!-- Category filters -->
                <t t-if="state.selectedCategories.length > 0">
                    <span class="badge bg-light text-dark me-2">
                        Category
                        <t t-esc="state.categoryFilterMode ? 'is one of' : 'is not one of'" />:
                    </span>
                    <t t-foreach="state.selectedCategories" t-as="categoryId" t-key="categoryId">
                        <span class="badge bg-info text-dark me-1">
                            <t t-esc="state.availableCategories.get(categoryId).name" />
                            <i class="fa fa-times ms-1"
                                t-on-click="() => this.toggleSelection('category', categoryId)" />
                        </span>
                    </t>
                </t>

                <!-- Application filter -->
                <t t-if="state.applicationFilter !== null">
                    <span class="badge bg-light text-dark me-2">
                        Type:
                    </span>
                    <span t-att-class="'badge me-1 ' + (state.applicationFilter ? 'bg-success' : 'bg-info')">
                        <t t-esc="state.applicationFilter ? 'Applications' : 'Modules'" />
                        <i class="fa fa-times ms-1" t-on-click="() => this.setApplicationFilter(null)" />
                    </span>
                </t>
            </div>
            <!-- Domain Display (for debugging) -->
            <div class="mb-3 text-muted small" t-if="state.domain.length > 0">
                <strong>Domain:</strong> <t t-esc="this.stringifyDomain()"/>
            </div>
            <!-- Filtered Modules List -->
            <div class="filtered-modules">
                <h5>Modules (
                    <t t-esc="state.filteredModules.length" />)
                </h5>
                <div class="list-group" style="max-height: 60vh; overflow-y:auto;">
                    <t t-foreach="state.filteredModules" t-as="module" t-key="module.id">
                        <div class="list-group-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <strong>
                                        <t t-esc="module.shortdesc || module.name" />
                                    </strong>
                                    <div class="text-muted small">
                                        <t t-esc="module.name" />
                                    </div>
                                </div>
                                <div>
                                    <t t-if="module.application">
                                        <span class="badge bg-success me-1">App</span>
                                    </t>
                                    <span class="badge bg-primary me-1">
                                        <t t-esc="module.state" />
                                    </span>
                                    <t t-if="module.category_id &amp;&amp; module.category_id.length === 2">
                                        <span class="badge bg-info text-dark">
                                            <t t-esc="module.category_id[1]" />
                                        </span>
                                    </t>
                                </div>
                            </div>
                        </div>
                    </t>
                    <div t-if="state.filteredModules.length === 0" class="list-group-item text-center text-muted">
                        No modules match the selected filters
                    </div>
                </div>
            </div>
        </div>
    </t>
</templates>