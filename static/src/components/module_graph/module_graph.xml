<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">

    <!-- Main Page Template -->
    <t t-name="module_graph_page_template">
        <div class="container-fluid h-100 d-flex flex-column">
            <div class="row flex-grow-1">
                <!-- Left panel (Module List) -->
                <div class="col-md-3 border-end overflow-auto">
                    <ModuleSelector modules="state.modules" filteredModules="getFilteredModules()"
                        filterState="state.filterState" selectedModuleIds="state.selectedModuleIds"
                        onSelectModule="(moduleId) => this.selectModule(moduleId)"
                        onUpdateFilters="(filters) => this.updateFilters(filters)" />
                </div>

                <!-- Right panel (Graph and Options) -->
                <div class="col-md-9 d-flex flex-column">
                    <!-- Graph Options -->
                    <div class="p-2 border-bottom">
                        <GraphOptions graphOptions="state.graphOptions"
                            onUpdateOptions="(options) => this.updateGraphOptions(options)"
                            onClearGraph="() => this.clearGraph()" />
                    </div>

                    <!-- Graph View -->
                    <div class="flex-grow-1 position-relative">
                        <ModulesGraphView graphData="state.graphData"
                            onModuleInfo="(moduleId) => this.showModuleInfo(moduleId)"
                            onRemoveModule="(moduleId) => this.removeModule(moduleId)" loading="state.loading" />

                        <!-- Loading Overlay -->
                        <div t-if="state.loading"
                            class="position-absolute top-0 start-0 w-100 h-100 bg-light bg-opacity-75 d-flex align-items-center justify-content-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </t>

    <!-- Module Selector Template -->
    <t t-name="module_selector_template">
        <div class="p-3">
            <h4>Module List</h4>

            <!-- Search bar -->
            <div class="mb-3">
                <input type="text" class="form-control" placeholder="Search modules..." t-on-input="onSearchInput"
                    t-att-value="props.filterState.searchValue" />
            </div>

            <!-- State filters -->
            <div class="mb-3 d-flex flex-wrap gap-2">
                <t t-foreach="Object.entries(props.filterState.stateFilter)" t-as="stateEntry" t-key="stateEntry[0]">
                    <button class="btn btn-sm" t-att-class="stateEntry[1] ? 'btn-primary' : 'btn-outline-primary'"
                        t-on-click="onToggleState" t-att-data-state="stateEntry[0]">
                        <t t-esc="stateEntry[0]" />
                    </button>
                </t>
            </div>

            <!-- Module list -->
            <div class="list-group">
                <t t-foreach="props.filteredModules" t-as="module" t-key="module.id">
                    <button
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center"
                        t-att-class="isModuleSelected(module.id) ? 'active' : ''" t-on-click="onModuleClick"
                        t-att-data-id="module.id">
                        <div>
                            <div>
                                <t t-esc="module.name" />
                            </div>
                            <small class="text-muted">
                                <t t-esc="module.shortdesc" />
                            </small>
                        </div>
                        <span class="badge rounded-pill"
                            t-attf-style="background-color: {{isModuleSelected(module.id) ? '#fff' : module.color}}; color: {{isModuleSelected(module.id) ? '#000' : '#fff'}}">
                            <t t-esc="module.state" />
                        </span>
                    </button>
                </t>
            </div>
        </div>
    </t>

    <!-- Graph Options Template -->
    <t t-name="graph_options_template">
        <div class="d-flex flex-wrap gap-3 p-2">
            <!-- Max Depth -->
            <div class="form-group">
                <label for="maxDepth">Max Depth:</label>
                <input type="number" class="form-control form-control-sm" id="maxDepth"
                    t-att-value="props.graphOptions.maxDepth" t-on-change="onChangeMaxDepth" min="0" />
            </div>

            <!-- Stop Conditions -->
            <div class="d-flex gap-2">
                <button class="btn btn-sm"
                    t-att-class="isConditionActive('installed') ? 'btn-success' : 'btn-outline-success'"
                    t-on-click="() => this.toggleStopCondition('installed')">
                    Stop on Installed
                </button>

                <button class="btn btn-sm"
                    t-att-class="isConditionActive('non_custom') ? 'btn-info' : 'btn-outline-info'"
                    t-on-click="() => this.toggleStopCondition('non_custom')">
                    Stop on Non-Custom
                </button>
            </div>

            <!-- Action Buttons -->
            <div class="ms-auto d-flex gap-2">
                <button class="btn btn-sm btn-warning" t-on-click="clearStopConditions">
                    Clear Conditions
                </button>

                <button class="btn btn-sm btn-danger" t-on-click="props.onClearGraph">
                    Clear Graph
                </button>
            </div>
        </div>
    </t>

    <!-- Modules Graph View Template with explicit height -->
    <t t-name="modules_graph_view_template">
        <div class="d-flex flex-column h-100">
            <div t-ref="graph" class="graph-container flex-grow-1" style="height: 500px; min-height: 500px;"></div>

        </div>
    </t>

</templates>